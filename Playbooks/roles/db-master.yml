---
- name: Configure MySQL master
  become: yes
  hosts: DB_master
  tasks:
    - name: Configure server-id
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        insertafter: EOF
        line: 'server-id   =1'

    - name: Add binlog_do_db
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        insertafter: EOF
        line: binlog_do_db = acmedb

    - name: Add log-configuration
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        insertafter: EOF
        line: 'log_bin = /var/log/mysql/mysql-bin.log'

    - name: Add log-configuration
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        insertafter: EOF
        line: 'log_bin_index =/var/log/mysql/mysql-bin.log.index'

    - name: Add log-configuration
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        insertafter: EOF
        line: 'relay_log = /var/log/mysql/mysql-relay-bin'

    - name: Add log-configuration
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        insertafter: EOF
        line: 'relay_log_index = /var/log/mysql/mysql-relay-bin.index'

    - name: Configure bind-address
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: bind-address  = "{{ hostvars.DB_master.ansible_host }}"
 
    - name: Install python3-pip
      package:
        name: python3-pip
        state: present

    - name: Install openstacksdk pymysql
      pip:
        name:
          - openstacksdk 
          - pymysql

    - name: Restart mysql
      service:
        name: mysql
        state: restarted

    - name: create ~/.config
      file:
        path: /home/ubuntu/.config
        state: directory

    - name: create ~/.config/openstack
      file:
        path: /home/ubuntu/.config/openstack
        state: directory

    - name: Run configuration script DB_master
      script: ~/Scripts/dbmaster.sh {{ hostvars.DB_slave.ansible_host }}

- hosts: localhost
  tasks:
    - name: Add server to known hosts
      shell: ssh-keyscan -H "{{ hostvars.DB_master.ansible_host }}" >> ~/.ssh/known_hosts

    - name: Copy variable file from DB_master
      shell: scp -i ~/.ssh/acme-key.pem ubuntu@{{ hostvars.DB_master.ansible_host }}:~/masterstatus.yml ~/Playbooks/vars-etc/

    - name: Sed to set correct Master_db ip to backup.sql
      shell: sed -i 's/set_new_ip/{{ hostvars.Nginx.floating_ip}}/g' ../../backup.sql
      args:
        warn: false

    - name: Copy clouds.yaml to DB_master
      shell: scp -i ~/.ssh/acme-key.pem ~/.config/openstack/clouds.yaml ubuntu@{{ hostvars.DB_master.ansible_host }}:;
   
    - name: Copy database file to DB_master
      shell: scp -i ~/.ssh/acme-key.pem ../../backup.sql ubuntu@{{ hostvars.DB_master.ansible_host }}:;


